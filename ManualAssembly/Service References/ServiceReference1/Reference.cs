//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManualAssembly.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.TraceabilitySoap")]
    public interface TraceabilitySoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CheckAutoReg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_CheckAutoReg(string Model, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CheckAutoReg", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_CheckAutoRegAsync(string Model, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_DetachDaughtBoard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_DetachDaughtBoard(string ParentSN, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_DetachDaughtBoard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_DetachDaughtBoardAsync(string ParentSN, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_AfterBurning", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_AfterBurning(string IntSN, string Process, string testResult, string Positon, decimal BurnTime, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_AfterBurning", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_AfterBurningAsync(string IntSN, string Process, string testResult, string Positon, decimal BurnTime, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_DaughtBoardProcessCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_DaughtBoardProcessCheck(string Process, string ParentSN, string ChildSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_DaughtBoardProcessCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_DaughtBoardProcessCheckAsync(string Process, string ParentSN, string ChildSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipReverse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_ShipReverse(string CartonID, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipReverse", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ShipReverseAsync(string CartonID, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangeDaughtBoard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_ChangeDaughtBoard(string ParentSN, string OLDChildSN, string NewChildSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangeDaughtBoard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ChangeDaughtBoardAsync(string ParentSN, string OLDChildSN, string NewChildSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_SplitCombination", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_SplitCombination(string ParentSN, string Process, string ProdLine, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_SplitCombination", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_SplitCombinationAsync(string ParentSN, string Process, string ProdLine, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_UploadHWXLS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_UploadHWXLS(System.Data.DataSet ds, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_UploadHWXLS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_UploadHWXLSAsync(System.Data.DataSet ds, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_SNChange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_SNChange(string OLDSN, string NewSN, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_SNChange", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_SNChangeAsync(string OLDSN, string NewSN, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_UploadLabel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_UploadLabel(string Model, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_UploadLabel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_UploadLabelAsync(string Model, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_PrintLablog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_PrintLablog(string Model, string SN, string LabelName, string Remark, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_PrintLablog", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_PrintLablogAsync(string Model, string SN, string LabelName, string Remark, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_GetLastResult(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastResult", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_GetLastResultAsync(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetTestRound", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_GetTestRound(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetTestRound", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_GetTestRoundAsync(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPATEOutput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_WIPATEOutput(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPATEOutput", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_WIPATEOutputAsync(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPATEOutputDirect", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_WIPATEOutputDirect(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPATEOutputDirect", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_WIPATEOutputDirectAsync(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CommSNVerify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_CommSNVerify(string IntSerialNo, string CommSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CommSNVerify", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_CommSNVerifyAsync(string IntSerialNo, string CommSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_GetWIPDataHisWithProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_GetWIPDataHisWithProcess(string PO, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_GetWIPDataHisWithProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_GetWIPDataHisWithProcessAsync(string PO, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_GetWIPDataWithSN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_GetWIPDataWithSN(string SID, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_GetWIPDataWithSN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_GetWIPDataWithSNAsync(string SID, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_WIPTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_WIPTestData(string Model, string DateCode, string WIPID, string TestResult, string HeadDetail, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_WIPTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_WIPTestDataAsync(string Model, string DateCode, string WIPID, string TestResult, string HeadDetail, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PCBAInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_PCBAInfo(string Type, string InputData, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PCBAInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PCBAInfoAsync(string Type, string InputData, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProductData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ProductData(string Model, string DJ, string Carton, string ProdSN, string DateFrom, string DateTo, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProductData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProductDataAsync(string Model, string DJ, string Carton, string ProdSN, string DateFrom, string DateTo, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProdTESTData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ProdTESTData(string Model, System.DateTime ProdDateFrom, System.DateTime ProdDateTo, string ProdSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProdTESTData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProdTESTDataAsync(string Model, System.DateTime ProdDateFrom, System.DateTime ProdDateTo, string ProdSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_TESTDataWithSN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_TESTDataWithSN(string ProdSN, string Process, string HeadDetail, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_TESTDataWithSN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_TESTDataWithSNAsync(string ProdSN, string Process, string HeadDetail, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_MaterialBySN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_MaterialBySN(string SN, string Process, string Type, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_MaterialBySN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_MaterialBySNAsync(string SN, string Process, string Type, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_FlowStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_FlowStatus(string SN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_FlowStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_FlowStatusAsync(string SN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ShipData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ShipData(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID, string PO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ShipData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ShipDataAsync(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID, string PO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ShipTESTDataBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ShipTESTDataBatch(string SID, string HD, string SNType, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ShipTESTDataBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ShipTESTDataBatchAsync(string SID, string HD, string SNType, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_OQAData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_OQAData(string DJ, string Model, string DateCode, string DateFrom, string DateTo, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_OQAData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_OQADataAsync(string DJ, string Model, string DateCode, string DateFrom, string DateTo, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_RepairData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_RepairData(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_RepairData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_RepairDataAsync(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_RepairDataVII", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_RepairDataVII(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo, string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_RepairDataVII", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_RepairDataVIIAsync(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo, string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ReworkData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ReworkData(string Model, string DateFrom, string DateTo, string WIPID, string Process, string HeadDetail, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ReworkData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ReworkDataAsync(string Model, string DateFrom, string DateTo, string WIPID, string Process, string HeadDetail, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_MateralTraceFG", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_MateralTraceFG(string PartNo, string DateCode, string LotNo, string ProdOrder, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_MateralTraceFG", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_MateralTraceFGAsync(string PartNo, string DateCode, string LotNo, string ProdOrder, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_HWShipData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_HWShipData(string Model, string DateCode, string DateFrom, string DateTo, string HD, System.Data.DataSet ds, string PackingDTFrm, string PackingDTTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_HWShipData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_HWShipDataAsync(string Model, string DateCode, string DateFrom, string DateTo, string HD, System.Data.DataSet ds, string PackingDTFrm, string PackingDTTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_FGInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_FGInventory(string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_FGInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_FGInventoryAsync(string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PrintLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_PrintLog(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PrintLog", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PrintLogAsync(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_DeliveryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_DeliveryData(string Model, string SO, string DateFrom, string DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_DeliveryData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_DeliveryDataAsync(string Model, string SO, string DateFrom, string DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_IPQCCheckData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_IPQCCheckData(string PO, string DateFrom, string DateTo, string CheckRS, string DateCode, string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_IPQCCheckData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_IPQCCheckDataAsync(string PO, string DateFrom, string DateTo, string CheckRS, string DateCode, string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProdPlanRpt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ProdPlanRpt(string proddate, string model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProdPlanRpt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProdPlanRptAsync(string proddate, string model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PCBARepair", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_PCBARepair(string prodorder, string Model, string DateFrom, string DateTo, string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PCBARepair", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PCBARepairAsync(string prodorder, string Model, string DateFrom, string DateTo, string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ComponentVerify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ComponentVerify(string prodorder, string Model, string Feeder, string DateFrom, string DateTo, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ComponentVerify", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ComponentVerifyAsync(string prodorder, string Model, string Feeder, string DateFrom, string DateTo, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ConsumerList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ConsumerList(string PKGID, string PartNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ConsumerList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ConsumerListAsync(string PKGID, string PartNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PCBSTKData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_PCBSTKData(string PO, string SN, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PCBSTKData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PCBSTKDataAsync(string PO, string SN, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PVIFAILData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_PVIFAILData(string PO, string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PVIFAILData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PVIFAILDataAsync(string PO, string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProcessHisDataByDTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_ProcessHisDataByDTime(string Model, string Process, string DTFrom, string DTTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_ProcessHisDataByDTime", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProcessHisDataByDTimeAsync(string Model, string Process, string DTFrom, string DTTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_GetSingleRowData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_GetSingleRowData(string InputType, string InputData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_GetSingleRowData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_GetSingleRowDataAsync(string InputType, string InputData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Comm_DonkeyVerify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Comm_DonkeyVerify(string PKGID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Comm_DonkeyVerify", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Comm_DonkeyVerifyAsync(string PKGID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_SendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Com_SendEmail(string sTo, string sCC, string sFrom, string sSubject, string sComment, string sUserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_SendEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Com_SendEmailAsync(string sTo, string sCC, string sFrom, string sSubject, string sComment, string sUserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PackingData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Rpt_Get_PackingData(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rpt_Get_PackingData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PackingDataAsync(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPWrite3C2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_WIPWrite3C2(string IntSerialNo, string Process, string Status, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPWrite3C2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_WIPWrite3C2Async(string IntSerialNo, string Process, string Status, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepMaintenance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_RepMaintenance(System.Data.DataSet dsData, string Type, string ModuleName, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepMaintenance", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_RepMaintenanceAsync(System.Data.DataSet dsData, string Type, string ModuleName, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPATEOutputEnter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_WIPATEOutputEnter(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPATEOutputEnter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_WIPATEOutputEnterAsync(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetSNInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_GetSNInfo(string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetSNInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetSNInfoAsync(string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepRetestProcessMaintain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_RepRetestProcessMaintain(string IntSerialNo, string Process, string Type, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepRetestProcessMaintain", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_RepRetestProcessMaintainAsync(string IntSerialNo, string Process, string Type, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProcessUpdateQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_ProcessUpdateQuery(string IntSerialNo, string ProdOrder, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProcessUpdateQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ProcessUpdateQueryAsync(string IntSerialNo, string ProdOrder, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProcessUpdateQueryVII", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_ProcessUpdateQueryVII(string IntSerialNo, string ProdOrder, string Assembly, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProcessUpdateQueryVII", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ProcessUpdateQueryVIIAsync(string IntSerialNo, string ProdOrder, string Assembly, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProcessUpdateCommand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_ProcessUpdateCommand(string IntSerialNo, string ProdOrder, string Process, string Type, string AssemblyNo, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProcessUpdateCommand", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ProcessUpdateCommandAsync(string IntSerialNo, string ProdOrder, string Process, string Type, string AssemblyNo, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOQALastTestResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_GetOQALastTestResult(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOQALastTestResult", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_GetOQALastTestResultAsync(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOutputQueryTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_GetOutputQueryTestData(string ProdOrder, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOutputQueryTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetOutputQueryTestDataAsync(string ProdOrder, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOutputATestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_GetOutputATestData(string Model, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOutputATestData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetOutputATestDataAsync(string Model, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOutputTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_GetOutputTestData(string ItemID, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetOutputTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetOutputTestDataAsync(string ItemID, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_OutputTestDataLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_OutputTestDataLog(string ItemID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_OutputTestDataLog", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_OutputTestDataLogAsync(string ItemID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_IPQCATEOutput", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_IPQCATEOutput(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_IPQCATEOutput", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_IPQCATEOutputAsync(string TestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastTestResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_GetLastTestResult(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastTestResult", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_GetLastTestResultAsync(string IntSerialNo, string Process);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastTestResultVII", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_GetLastTestResultVII(string IntSerialNo, string Process, string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastTestResultVII", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_GetLastTestResultVIIAsync(string IntSerialNo, string Process, string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastTestResultNewPlatform", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_GetLastTestResultNewPlatform(string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetLastTestResultNewPlatform", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_GetLastTestResultNewPlatformAsync(string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_AssemblyMTrace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_AssemblyMTrace(int LineID, int StationID, string ProdOrder, string PCBA, string SN, string Process, string Command, string UserName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_AssemblyMTrace", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_AssemblyMTraceAsync(int LineID, int StationID, string ProdOrder, string PCBA, string SN, string Process, string Command, string UserName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadRepairData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_ReadRepairData(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadRepairData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadRepairDataAsync(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetRepairCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_GetRepairCode(string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetRepairCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetRepairCodeAsync(string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepGetFlow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_RepGetFlow(string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepGetFlow", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_RepGetFlowAsync(string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetTestDataByProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_GetTestDataByProcess(string IntSerialNo, string Process, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetTestDataByProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetTestDataByProcessAsync(string IntSerialNo, string Process, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepSaveRepairData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SFC_RepSaveRepairData(System.Data.DataSet RepData, string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepSaveRepairData", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SFC_RepSaveRepairDataAsync(System.Data.DataSet RepData, string IntSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadNDFData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_ReadNDFData(string IntSN, string OperatorName, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadNDFData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadNDFDataAsync(string IntSN, string OperatorName, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadFailData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_ReadFailData(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadFailData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadFailDataAsync(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadFixData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_ReadFixData(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ReadFixData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadFixDataAsync(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepUpdateRepairData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_RepUpdateRepairData(System.Data.DataSet RepData, string IntSerialNo, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_RepUpdateRepairData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_RepUpdateRepairDataAsync(System.Data.DataSet RepData, string IntSerialNo, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShipTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShipTestData(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShipTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ShipTestDataAsync(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShipTestDataStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ShipTestDataStatus(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShipTestDataStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ShipTestDataStatusAsync(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SFC_ShipTestData(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ShipTestDataAsync(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipTestDataStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SFC_ShipTestDataStatus(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipTestDataStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ShipTestDataStatusAsync(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_ReadWI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_ReadWI(string LoadID, string ItemID, string CellID, string Type, int History, string Status, string StartDate, string EndDate, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_ReadWI", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_ReadWIAsync(string LoadID, string ItemID, string CellID, string Type, int History, string Status, string StartDate, string EndDate, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_WILoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_WILoad(System.Data.DataSet WIData, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_WILoad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_WILoadAsync(System.Data.DataSet WIData, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_DealWI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_DealWI(string LoadID, string Type, string ProdOrder, string Computer, string Operatorname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_DealWI", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_DealWIAsync(string LoadID, string Type, string ProdOrder, string Computer, string Operatorname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_ShowEquipMatching", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_ShowEquipMatching(string LoadID, string EquipmentID, string ComputerName, string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_ShowEquipMatching", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_ShowEquipMatchingAsync(string LoadID, string EquipmentID, string ComputerName, string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_EquipMatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_EquipMatch(string LoadID, string ItemID, string EquipmentID, string PEquipmentID, string Type, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_EquipMatch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_EquipMatchAsync(string LoadID, string ItemID, string EquipmentID, string PEquipmentID, string Type, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_WILoadModel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_WILoadModel(string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_WILoadModel", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_WILoadModelAsync(string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryWILoadID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_QueryWILoadID(string Model, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryWILoadID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryWILoadIDAsync(string Model, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryAutoDisplay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SMT_QueryAutoDisplay(string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryAutoDisplay", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SMT_QueryAutoDisplayAsync(string ComputerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryVerificationStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_QueryVerificationStatus(string LoadID, string Type, string Status, string StartDate, string EndDate, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryVerificationStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryVerificationStatusAsync(string LoadID, string Type, string Status, string StartDate, string EndDate, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_LoadSetup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_LoadSetup(string LoadID, string Type, string OperatorName, string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_LoadSetup", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_LoadSetupAsync(string LoadID, string Type, string OperatorName, string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryEquipInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_QueryEquipInfo(string EquipmentID, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryEquipInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryEquipInfoAsync(string EquipmentID, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryCellTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_QueryCellTransfer(string LoadID, string StartDate, string EndDate, string OriginalEquipID, string DestinationEquipID, string ComputerName, string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryCellTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryCellTransferAsync(string LoadID, string StartDate, string EndDate, string OriginalEquipID, string DestinationEquipID, string ComputerName, string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CellTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_CellTransfer(string LoadID, string OriginalCellID, string DestinationCellID, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CellTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_CellTransferAsync(string LoadID, string OriginalCellID, string DestinationCellID, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryCellManage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_QueryCellManage(string LoadID, string StartDate, string EndDate, string EquipID, string ComputerName, string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryCellManage", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryCellManageAsync(string LoadID, string StartDate, string EndDate, string EquipID, string ComputerName, string Type, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryVerification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_QueryVerification(string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryVerification", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryVerificationAsync(string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CompVerify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_CompVerify(string Barcode, string PKGID, string Type, string Computer, string OperatorName, int Qty, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CompVerify", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_CompVerifyAsync(string Barcode, string PKGID, string Type, string Computer, string OperatorName, int Qty, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CompCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_CompCheck(string Barcode, string PKGID, string Type, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CompCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_CompCheckAsync(string Barcode, string PKGID, string Type, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_SPControl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_SPControl(string Process, string PKGID, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_SPControl", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_SPControlAsync(string Process, string PKGID, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryPCBAScan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_QueryPCBAScan(string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_QueryPCBAScan", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryPCBAScanAsync(string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PCBAScan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_PCBAScan(string PCBAID, string Process, string ComputerName, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PCBAScan", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_PCBAScanAsync(string PCBAID, string Process, string ComputerName, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_FullCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_FullCheck(string Process, string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_FullCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_FullCheckAsync(string Process, string ComputerName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_ReadModel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_ReadModel(string AssemblyNo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_ReadModel", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_ReadModelAsync(string AssemblyNo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PBoardScan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_PBoardScan(string PBoardID, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PBoardScan", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_PBoardScanAsync(string PBoardID, string OperatorName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendEmail(string sTo, string sCC, string sFrom, string sSubject, string sComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendEmailAsync(string sTo, string sCC, string sFrom, string sSubject, string sComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_CircuitCompare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Com_CircuitCompare(string PCBANo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_CircuitCompare", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Com_CircuitCompareAsync(string PCBANo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_SPQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_SPQuery(string PKGID, string Process, string StartTime, string EndTime, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_SPQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_SPQueryAsync(string PKGID, string Process, string StartTime, string EndTime, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_LoadCompare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_LoadCompare(string LoadID, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_LoadCompare", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_LoadCompareAsync(string LoadID, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_MaterialModify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_MaterialModify(string LoadID, string ItemID, string CellID, string Barcode, string MaterialNo, string RepMaterialNo, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_MaterialModify", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_MaterialModifyAsync(string LoadID, string ItemID, string CellID, string Barcode, string MaterialNo, string RepMaterialNo, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CellPartition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_CellPartition(string LoadID, string FromCellID, string FromCircuit, string ToCellID, string ToCircuit, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CellPartition", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_CellPartitionAsync(string LoadID, string FromCellID, string FromCircuit, string ToCellID, string ToCircuit, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CellUnload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_CellUnload(string LoadID, string CellID, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_CellUnload", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_CellUnloadAsync(string LoadID, string CellID, string OperatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_JobGetOneList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable TLA_JobGetOneList(string JobNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_JobGetOneList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> TLA_JobGetOneListAsync(string JobNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_CompWithProcessGetAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable TLA_CompWithProcessGetAll(int AssemblyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_CompWithProcessGetAll", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> TLA_CompWithProcessGetAllAsync(int AssemblyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_PickingListGetTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable TLA_PickingListGetTable(string JobNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_PickingListGetTable", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> TLA_PickingListGetTableAsync(string JobNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_WriteFunction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Com_WriteFunction(System.Data.DataSet FunctionList, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_WriteFunction", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Com_WriteFunctionAsync(System.Data.DataSet FunctionList, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_ReadRight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Com_ReadRight(string FrmName, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_ReadRight", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Com_ReadRightAsync(string FrmName, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Public_WriteLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Public_WriteLog(string Func, string ErrMessage, string UserNo, string Type, string Remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Public_WriteLog", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Public_WriteLogAsync(string Func, string ErrMessage, string UserNo, string Type, string Remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_Defination", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Com_Defination(System.Data.DataSet Data, string FunctionName, string Command, string TableName, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_Defination", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Com_DefinationAsync(System.Data.DataSet Data, string FunctionName, string Command, string TableName, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_ChangePSW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Com_ChangePSW(string UserNo, string OldPSW, string NewPSW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_ChangePSW", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Com_ChangePSWAsync(string UserNo, string OldPSW, string NewPSW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Com_Login(string UserNo, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_Login", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Com_LoginAsync(string UserNo, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_ReadFunction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Com_ReadFunction(string ModuleName, string FunctionName, string FunctionID, string RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_ReadFunction", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Com_ReadFunctionAsync(string ModuleName, string FunctionName, string FunctionID, string RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GrantRight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Com_GrantRight(int RoleID, int FunctionID, string Command, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GrantRight", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Com_GrantRightAsync(int RoleID, int FunctionID, string Command, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_PickMatl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet COM_PickMatl(string ProdOrder, string PKGID, string LotNo, string DateCode, string Vendor, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_PickMatl", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> COM_PickMatlAsync(string ProdOrder, string PKGID, string LotNo, string DateCode, string Vendor, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetProdOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet COM_GetProdOrder(string ProdOrder, string Model, string Closed, string Released, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetProdOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> COM_GetProdOrderAsync(string ProdOrder, string Model, string Closed, string Released, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetBrotherAssembly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet COM_GetBrotherAssembly(string AssemblyNo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetBrotherAssembly", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> COM_GetBrotherAssemblyAsync(string AssemblyNo, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetConfig", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string COM_GetConfig(string ConfigID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetConfig", ReplyAction="*")]
        System.Threading.Tasks.Task<string> COM_GetConfigAsync(string ConfigID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetSetData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet COM_GetSetData(string SetCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetSetData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> COM_GetSetDataAsync(string SetCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_VerifySNDuplicate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Com_VerifySNDuplicate(string SID, string SNType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_VerifySNDuplicate", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Com_VerifySNDuplicateAsync(string SID, string SNType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GetLabelTemplate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Com_GetLabelTemplate(string BarName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GetLabelTemplate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Com_GetLabelTemplateAsync(string BarName, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GetStandardTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Com_GetStandardTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GetStandardTime", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Com_GetStandardTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GetSingleData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Com_GetSingleData(string InputData, string DataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Com_GetSingleData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Com_GetSingleDataAsync(string InputData, string DataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetProcessListWithType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet COM_GetProcessListWithType(string ProcessType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/COM_GetProcessListWithType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> COM_GetProcessListWithTypeAsync(string ProcessType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_GetSTKProdOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_GetSTKProdOrder(string ProdOrder, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_GetSTKProdOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_GetSTKProdOrderAsync(string ProdOrder, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_GetCountPKGID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_GetCountPKGID(string PKGID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_GetCountPKGID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_GetCountPKGIDAsync(string PKGID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_StickLabel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_StickLabel(string PanelID, System.Data.DataSet DSPCB, string UserID, string AssembyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_StickLabel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_StickLabelAsync(string PanelID, System.Data.DataSet DSPCB, string UserID, string AssembyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PCBAPVI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_PCBAPVI(string SID, string ProdLine, string Process, string PVIResult, string UserID, System.Data.DataSet RepDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PCBAPVI", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_PCBAPVIAsync(string SID, string ProdLine, string Process, string PVIResult, string UserID, System.Data.DataSet RepDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PCBARepair", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMT_PCBARepair(string SID, string RepCode, string ProdLine, string UserID, System.Data.DataSet RepDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_PCBARepair", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMT_PCBARepairAsync(string SID, string RepCode, string ProdLine, string UserID, System.Data.DataSet RepDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_GetPCBARepairDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SMT_GetPCBARepairDetail(string PCBID, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SMT_GetPCBARepairDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SMT_GetPCBARepairDetailAsync(string PCBID, string UserID);
        
        // CODEGEN: 参数“sqlParam”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayItemAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_ExecuteSQL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        ManualAssembly.ServiceReference1.TLA_ExecuteSQLResponse TLA_ExecuteSQL(ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_ExecuteSQL", ReplyAction="*")]
        System.Threading.Tasks.Task<ManualAssembly.ServiceReference1.TLA_ExecuteSQLResponse> TLA_ExecuteSQLAsync(ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest request);
        
        // CODEGEN: 参数“SQLParam”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayItemAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_ExecuteSqlQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryResponse TLA_ExecuteSqlQuery(ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_ExecuteSqlQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryResponse> TLA_ExecuteSqlQueryAsync(ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_Assembling", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataTable TLA_Assembling(string PCBID, string JobNo, string ProcessIDList, int stnID, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_Assembling", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> TLA_AssemblingAsync(string PCBID, string JobNo, string ProcessIDList, int stnID, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_boxingSuba", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataTable TLA_boxingSuba(string boxBarcode, string JobNo, int ProcessID, int StationID, string SubaName, int toBoxQty, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TLA_boxingSuba", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> TLA_boxingSubaAsync(string boxBarcode, string JobNo, int ProcessID, int StationID, string SubaName, int toBoxQty, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangeBOX", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_ChangeBOX(string strSID, string stroldBOXID, string strNewBOXID, string strUserID, string strTYN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangeBOX", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ChangeBOXAsync(string strSID, string stroldBOXID, string strNewBOXID, string strUserID, string strTYN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangePallet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_ChangePallet(string strSID, string stroldBOXID, string strNewPalletID, string strUserID, string TYN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangePallet", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ChangePalletAsync(string strSID, string stroldBOXID, string strNewPalletID, string strUserID, string TYN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Matching1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_Matching1(System.Data.DataSet ds, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Matching1", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_Matching1Async(System.Data.DataSet ds, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetMATCHING1Status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetMATCHING1Status(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetMATCHING1Status", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetMATCHING1StatusAsync(string IntSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelInfoPacking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetModelInfoPacking(string ProdOrder, string InputType, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelInfoPacking", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelInfoPackingAsync(string ProdOrder, string InputType, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetCartonInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetCartonInfo(string CartonID, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetCartonInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetCartonInfoAsync(string CartonID, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetPackingData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetPackingData(string InputData, string InputType, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetPackingData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetPackingDataAsync(string InputData, string InputType, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CommProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_CommProcess(string SID, string Process, string ProdLine, string UserNo, string testResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CommProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_CommProcessAsync(string SID, string Process, string ProdLine, string UserNo, string testResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_IDSWOP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_IDSWOP(string OLDSN, string NewSN, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_IDSWOP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_IDSWOPAsync(string OLDSN, string NewSN, string Process, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetProcessDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetProcessDetail(string Model, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetProcessDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetProcessDetailAsync(string Model, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_SNRework", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_SNRework(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, string cssn, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_SNRework", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_SNReworkAsync(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, string cssn, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPRework", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_WIPRework(string IntSN, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPRework", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_WIPReworkAsync(string IntSN, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Packing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_Packing(string ProdOrder, string IntSN, System.Data.DataSet ds, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Packing", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_PackingAsync(string ProdOrder, string IntSN, System.Data.DataSet ds, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetModelInfo(string Model, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelInfoAsync(string Model, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetWIPDataWithIntSN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetWIPDataWithIntSN(string IntSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetWIPDataWithIntSN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetWIPDataWithIntSNAsync(string IntSN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetCMBStructure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetCMBStructure(string Model, string CMBProcess, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetCMBStructure", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetCMBStructureAsync(string Model, string CMBProcess, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Combine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_Combine(string SID, string Process, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Combine", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_CombineAsync(string SID, string Process, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelStructure", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetModelStructure(string Model, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelStructure", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelStructureAsync(string Model, string tblName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CheckALLPassed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_CheckALLPassed(string SN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CheckALLPassed", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_CheckALLPassedAsync(string SN, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetHangCarton", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetHangCarton();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetHangCarton", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetHangCartonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Shipment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_Shipment(string CartonID, string SalesOrder, string Model, string UserNo, int CurCartonShipQTY, string ShipType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_Shipment", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ShipmentAsync(string CartonID, string SalesOrder, string Model, string UserNo, int CurCartonShipQTY, string ShipType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetSOInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetSOInfo(string SalesOrder, string Model, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetSOInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetSOInfoAsync(string SalesOrder, string Model, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipDataInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_ShipDataInfo(string SalesOrder, string Model, string HOD, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ShipDataInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_ShipDataInfoAsync(string SalesOrder, string Model, string HOD, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CheckShipFIFO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_CheckShipFIFO(string CartonID, string DateCode, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CheckShipFIFO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_CheckShipFIFOAsync(string CartonID, string DateCode, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProductEnter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_ProductEnter(System.Data.DataSet DS, int ChildCount, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ProductEnter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ProductEnterAsync(System.Data.DataSet DS, int ChildCount, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelLabelTemplate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        System.Data.DataSet SFC_GetModelLabelTemplate(string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_GetModelLabelTemplate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelLabelTemplateAsync(string Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_OQAProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_OQAProcess(string Model, string ProdLine, string UserNo, string CSSN, string IntSN, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_OQAProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_OQAProcessAsync(string Model, string ProdLine, string UserNo, string CSSN, string IntSN, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPPVICheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_WIPPVICheck(string SID, string ProdLine, string Process, string CheckRS, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPPVICheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_WIPPVICheckAsync(string SID, string ProdLine, string Process, string CheckRS, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPPVIRepair", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_WIPPVIRepair(string SID, string RepCode, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_WIPPVIRepair", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_WIPPVIRepairAsync(string SID, string RepCode, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CSReturn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_CSReturn(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_CSReturn", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_CSReturnAsync(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangeModel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_ChangeModel(string ProdOrder, string Model, string OLDIntSN, string NEWIntSN, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ChangeModel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ChangeModelAsync(string ProdOrder, string Model, string OLDIntSN, string NEWIntSN, string ProdLine, string UserNo, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ForceCloseCarton", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DictionaryEntry[]))]
        string SFC_ForceCloseCarton(string CartonID, string UserNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SFC_ForceCloseCarton", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SFC_ForceCloseCartonAsync(string CartonID, string UserNo);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DictionaryEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public object Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TLA_ExecuteSQL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TLA_ExecuteSQLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SQLstring;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ManualAssembly.ServiceReference1.DictionaryEntry[] sqlParam;
        
        public TLA_ExecuteSQLRequest() {
        }
        
        public TLA_ExecuteSQLRequest(string SQLstring, ManualAssembly.ServiceReference1.DictionaryEntry[] sqlParam) {
            this.SQLstring = SQLstring;
            this.sqlParam = sqlParam;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TLA_ExecuteSQLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TLA_ExecuteSQLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool TLA_ExecuteSQLResult;
        
        public TLA_ExecuteSQLResponse() {
        }
        
        public TLA_ExecuteSQLResponse(bool TLA_ExecuteSQLResult) {
            this.TLA_ExecuteSQLResult = TLA_ExecuteSQLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TLA_ExecuteSqlQuery", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TLA_ExecuteSqlQueryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SQLstring;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ManualAssembly.ServiceReference1.DictionaryEntry[] SQLParam;
        
        public TLA_ExecuteSqlQueryRequest() {
        }
        
        public TLA_ExecuteSqlQueryRequest(string SQLstring, ManualAssembly.ServiceReference1.DictionaryEntry[] SQLParam) {
            this.SQLstring = SQLstring;
            this.SQLParam = SQLParam;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TLA_ExecuteSqlQueryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TLA_ExecuteSqlQueryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataTable TLA_ExecuteSqlQueryResult;
        
        public TLA_ExecuteSqlQueryResponse() {
        }
        
        public TLA_ExecuteSqlQueryResponse(System.Data.DataTable TLA_ExecuteSqlQueryResult) {
            this.TLA_ExecuteSqlQueryResult = TLA_ExecuteSqlQueryResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TraceabilitySoapChannel : ManualAssembly.ServiceReference1.TraceabilitySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TraceabilitySoapClient : System.ServiceModel.ClientBase<ManualAssembly.ServiceReference1.TraceabilitySoap>, ManualAssembly.ServiceReference1.TraceabilitySoap {
        
        public TraceabilitySoapClient() {
        }
        
        public TraceabilitySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TraceabilitySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraceabilitySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraceabilitySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SFC_CheckAutoReg(string Model, string Process, string UserNo) {
            return base.Channel.SFC_CheckAutoReg(Model, Process, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_CheckAutoRegAsync(string Model, string Process, string UserNo) {
            return base.Channel.SFC_CheckAutoRegAsync(Model, Process, UserNo);
        }
        
        public string SFC_DetachDaughtBoard(string ParentSN, string Process, string UserNo) {
            return base.Channel.SFC_DetachDaughtBoard(ParentSN, Process, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_DetachDaughtBoardAsync(string ParentSN, string Process, string UserNo) {
            return base.Channel.SFC_DetachDaughtBoardAsync(ParentSN, Process, UserNo);
        }
        
        public string SFC_AfterBurning(string IntSN, string Process, string testResult, string Positon, decimal BurnTime, string UserNo) {
            return base.Channel.SFC_AfterBurning(IntSN, Process, testResult, Positon, BurnTime, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_AfterBurningAsync(string IntSN, string Process, string testResult, string Positon, decimal BurnTime, string UserNo) {
            return base.Channel.SFC_AfterBurningAsync(IntSN, Process, testResult, Positon, BurnTime, UserNo);
        }
        
        public string SFC_DaughtBoardProcessCheck(string Process, string ParentSN, string ChildSN, string UserNo) {
            return base.Channel.SFC_DaughtBoardProcessCheck(Process, ParentSN, ChildSN, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_DaughtBoardProcessCheckAsync(string Process, string ParentSN, string ChildSN, string UserNo) {
            return base.Channel.SFC_DaughtBoardProcessCheckAsync(Process, ParentSN, ChildSN, UserNo);
        }
        
        public string SFC_ShipReverse(string CartonID, string UserNo) {
            return base.Channel.SFC_ShipReverse(CartonID, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ShipReverseAsync(string CartonID, string UserNo) {
            return base.Channel.SFC_ShipReverseAsync(CartonID, UserNo);
        }
        
        public string SFC_ChangeDaughtBoard(string ParentSN, string OLDChildSN, string NewChildSN, string UserNo) {
            return base.Channel.SFC_ChangeDaughtBoard(ParentSN, OLDChildSN, NewChildSN, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ChangeDaughtBoardAsync(string ParentSN, string OLDChildSN, string NewChildSN, string UserNo) {
            return base.Channel.SFC_ChangeDaughtBoardAsync(ParentSN, OLDChildSN, NewChildSN, UserNo);
        }
        
        public string SFC_SplitCombination(string ParentSN, string Process, string ProdLine, string UserNo) {
            return base.Channel.SFC_SplitCombination(ParentSN, Process, ProdLine, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_SplitCombinationAsync(string ParentSN, string Process, string ProdLine, string UserNo) {
            return base.Channel.SFC_SplitCombinationAsync(ParentSN, Process, ProdLine, UserNo);
        }
        
        public string SFC_UploadHWXLS(System.Data.DataSet ds, string UserNo) {
            return base.Channel.SFC_UploadHWXLS(ds, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_UploadHWXLSAsync(System.Data.DataSet ds, string UserNo) {
            return base.Channel.SFC_UploadHWXLSAsync(ds, UserNo);
        }
        
        public string SFC_SNChange(string OLDSN, string NewSN, string Process, string UserNo) {
            return base.Channel.SFC_SNChange(OLDSN, NewSN, Process, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_SNChangeAsync(string OLDSN, string NewSN, string Process, string UserNo) {
            return base.Channel.SFC_SNChangeAsync(OLDSN, NewSN, Process, UserNo);
        }
        
        public string SFC_UploadLabel(string Model, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_UploadLabel(Model, UserNo, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_UploadLabelAsync(string Model, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_UploadLabelAsync(Model, UserNo, ds);
        }
        
        public string SFC_PrintLablog(string Model, string SN, string LabelName, string Remark, string UserNo) {
            return base.Channel.SFC_PrintLablog(Model, SN, LabelName, Remark, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_PrintLablogAsync(string Model, string SN, string LabelName, string Remark, string UserNo) {
            return base.Channel.SFC_PrintLablogAsync(Model, SN, LabelName, Remark, UserNo);
        }
        
        public string SFC_GetLastResult(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetLastResult(IntSerialNo, Process);
        }
        
        public System.Threading.Tasks.Task<string> SFC_GetLastResultAsync(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetLastResultAsync(IntSerialNo, Process);
        }
        
        public string SFC_GetTestRound(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetTestRound(IntSerialNo, Process);
        }
        
        public System.Threading.Tasks.Task<string> SFC_GetTestRoundAsync(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetTestRoundAsync(IntSerialNo, Process);
        }
        
        public string SFC_WIPATEOutput(string TestData) {
            return base.Channel.SFC_WIPATEOutput(TestData);
        }
        
        public System.Threading.Tasks.Task<string> SFC_WIPATEOutputAsync(string TestData) {
            return base.Channel.SFC_WIPATEOutputAsync(TestData);
        }
        
        public string SFC_WIPATEOutputDirect(string TestData) {
            return base.Channel.SFC_WIPATEOutputDirect(TestData);
        }
        
        public System.Threading.Tasks.Task<string> SFC_WIPATEOutputDirectAsync(string TestData) {
            return base.Channel.SFC_WIPATEOutputDirectAsync(TestData);
        }
        
        public string SFC_CommSNVerify(string IntSerialNo, string CommSN) {
            return base.Channel.SFC_CommSNVerify(IntSerialNo, CommSN);
        }
        
        public System.Threading.Tasks.Task<string> SFC_CommSNVerifyAsync(string IntSerialNo, string CommSN) {
            return base.Channel.SFC_CommSNVerifyAsync(IntSerialNo, CommSN);
        }
        
        public System.Data.DataSet Rpt_GetWIPDataHisWithProcess(string PO, string Process, string UserNo) {
            return base.Channel.Rpt_GetWIPDataHisWithProcess(PO, Process, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_GetWIPDataHisWithProcessAsync(string PO, string Process, string UserNo) {
            return base.Channel.Rpt_GetWIPDataHisWithProcessAsync(PO, Process, UserNo);
        }
        
        public System.Data.DataSet Rpt_GetWIPDataWithSN(string SID, string UserNo) {
            return base.Channel.Rpt_GetWIPDataWithSN(SID, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_GetWIPDataWithSNAsync(string SID, string UserNo) {
            return base.Channel.Rpt_GetWIPDataWithSNAsync(SID, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_WIPTestData(string Model, string DateCode, string WIPID, string TestResult, string HeadDetail, string Process, string UserNo) {
            return base.Channel.Rpt_Get_WIPTestData(Model, DateCode, WIPID, TestResult, HeadDetail, Process, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_WIPTestDataAsync(string Model, string DateCode, string WIPID, string TestResult, string HeadDetail, string Process, string UserNo) {
            return base.Channel.Rpt_Get_WIPTestDataAsync(Model, DateCode, WIPID, TestResult, HeadDetail, Process, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_PCBAInfo(string Type, string InputData, string UserNo) {
            return base.Channel.Rpt_Get_PCBAInfo(Type, InputData, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PCBAInfoAsync(string Type, string InputData, string UserNo) {
            return base.Channel.Rpt_Get_PCBAInfoAsync(Type, InputData, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_ProductData(string Model, string DJ, string Carton, string ProdSN, string DateFrom, string DateTo, string UserNo) {
            return base.Channel.Rpt_Get_ProductData(Model, DJ, Carton, ProdSN, DateFrom, DateTo, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProductDataAsync(string Model, string DJ, string Carton, string ProdSN, string DateFrom, string DateTo, string UserNo) {
            return base.Channel.Rpt_Get_ProductDataAsync(Model, DJ, Carton, ProdSN, DateFrom, DateTo, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_ProdTESTData(string Model, System.DateTime ProdDateFrom, System.DateTime ProdDateTo, string ProdSN, string UserNo) {
            return base.Channel.Rpt_Get_ProdTESTData(Model, ProdDateFrom, ProdDateTo, ProdSN, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProdTESTDataAsync(string Model, System.DateTime ProdDateFrom, System.DateTime ProdDateTo, string ProdSN, string UserNo) {
            return base.Channel.Rpt_Get_ProdTESTDataAsync(Model, ProdDateFrom, ProdDateTo, ProdSN, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_TESTDataWithSN(string ProdSN, string Process, string HeadDetail, string UserNo) {
            return base.Channel.Rpt_Get_TESTDataWithSN(ProdSN, Process, HeadDetail, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_TESTDataWithSNAsync(string ProdSN, string Process, string HeadDetail, string UserNo) {
            return base.Channel.Rpt_Get_TESTDataWithSNAsync(ProdSN, Process, HeadDetail, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_MaterialBySN(string SN, string Process, string Type, string UserNo) {
            return base.Channel.Rpt_Get_MaterialBySN(SN, Process, Type, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_MaterialBySNAsync(string SN, string Process, string Type, string UserNo) {
            return base.Channel.Rpt_Get_MaterialBySNAsync(SN, Process, Type, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_FlowStatus(string SN, string UserNo) {
            return base.Channel.Rpt_Get_FlowStatus(SN, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_FlowStatusAsync(string SN, string UserNo) {
            return base.Channel.Rpt_Get_FlowStatusAsync(SN, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_ShipData(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID, string PO) {
            return base.Channel.Rpt_Get_ShipData(Model, DateCode, DateFrom, DateTo, ProdSN, CartonID, PO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ShipDataAsync(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID, string PO) {
            return base.Channel.Rpt_Get_ShipDataAsync(Model, DateCode, DateFrom, DateTo, ProdSN, CartonID, PO);
        }
        
        public System.Data.DataSet Rpt_Get_ShipTESTDataBatch(string SID, string HD, string SNType, string UserNo) {
            return base.Channel.Rpt_Get_ShipTESTDataBatch(SID, HD, SNType, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ShipTESTDataBatchAsync(string SID, string HD, string SNType, string UserNo) {
            return base.Channel.Rpt_Get_ShipTESTDataBatchAsync(SID, HD, SNType, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_OQAData(string DJ, string Model, string DateCode, string DateFrom, string DateTo, string UserNo) {
            return base.Channel.Rpt_Get_OQAData(DJ, Model, DateCode, DateFrom, DateTo, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_OQADataAsync(string DJ, string Model, string DateCode, string DateFrom, string DateTo, string UserNo) {
            return base.Channel.Rpt_Get_OQADataAsync(DJ, Model, DateCode, DateFrom, DateTo, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_RepairData(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo) {
            return base.Channel.Rpt_Get_RepairData(Model, DateFrom, DateTo, DateCode, ItemNo, CompanyCode, CauseCode, TestStation, ProductType, Location, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_RepairDataAsync(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo) {
            return base.Channel.Rpt_Get_RepairDataAsync(Model, DateFrom, DateTo, DateCode, ItemNo, CompanyCode, CauseCode, TestStation, ProductType, Location, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_RepairDataVII(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo, string IntSerialNo) {
            return base.Channel.Rpt_Get_RepairDataVII(Model, DateFrom, DateTo, DateCode, ItemNo, CompanyCode, CauseCode, TestStation, ProductType, Location, UserNo, IntSerialNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_RepairDataVIIAsync(string Model, string DateFrom, string DateTo, string DateCode, string ItemNo, string CompanyCode, string CauseCode, string TestStation, string ProductType, string Location, string UserNo, string IntSerialNo) {
            return base.Channel.Rpt_Get_RepairDataVIIAsync(Model, DateFrom, DateTo, DateCode, ItemNo, CompanyCode, CauseCode, TestStation, ProductType, Location, UserNo, IntSerialNo);
        }
        
        public System.Data.DataSet Rpt_Get_ReworkData(string Model, string DateFrom, string DateTo, string WIPID, string Process, string HeadDetail, string UserNo) {
            return base.Channel.Rpt_Get_ReworkData(Model, DateFrom, DateTo, WIPID, Process, HeadDetail, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ReworkDataAsync(string Model, string DateFrom, string DateTo, string WIPID, string Process, string HeadDetail, string UserNo) {
            return base.Channel.Rpt_Get_ReworkDataAsync(Model, DateFrom, DateTo, WIPID, Process, HeadDetail, UserNo);
        }
        
        public System.Data.DataSet Rpt_Get_MateralTraceFG(string PartNo, string DateCode, string LotNo, string ProdOrder, string User) {
            return base.Channel.Rpt_Get_MateralTraceFG(PartNo, DateCode, LotNo, ProdOrder, User);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_MateralTraceFGAsync(string PartNo, string DateCode, string LotNo, string ProdOrder, string User) {
            return base.Channel.Rpt_Get_MateralTraceFGAsync(PartNo, DateCode, LotNo, ProdOrder, User);
        }
        
        public System.Data.DataSet Rpt_Get_HWShipData(string Model, string DateCode, string DateFrom, string DateTo, string HD, System.Data.DataSet ds, string PackingDTFrm, string PackingDTTo) {
            return base.Channel.Rpt_Get_HWShipData(Model, DateCode, DateFrom, DateTo, HD, ds, PackingDTFrm, PackingDTTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_HWShipDataAsync(string Model, string DateCode, string DateFrom, string DateTo, string HD, System.Data.DataSet ds, string PackingDTFrm, string PackingDTTo) {
            return base.Channel.Rpt_Get_HWShipDataAsync(Model, DateCode, DateFrom, DateTo, HD, ds, PackingDTFrm, PackingDTTo);
        }
        
        public System.Data.DataSet Rpt_Get_FGInventory(string Model) {
            return base.Channel.Rpt_Get_FGInventory(Model);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_FGInventoryAsync(string Model) {
            return base.Channel.Rpt_Get_FGInventoryAsync(Model);
        }
        
        public System.Data.DataSet Rpt_Get_PrintLog(string SN) {
            return base.Channel.Rpt_Get_PrintLog(SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PrintLogAsync(string SN) {
            return base.Channel.Rpt_Get_PrintLogAsync(SN);
        }
        
        public System.Data.DataSet Rpt_Get_DeliveryData(string Model, string SO, string DateFrom, string DateTo) {
            return base.Channel.Rpt_Get_DeliveryData(Model, SO, DateFrom, DateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_DeliveryDataAsync(string Model, string SO, string DateFrom, string DateTo) {
            return base.Channel.Rpt_Get_DeliveryDataAsync(Model, SO, DateFrom, DateTo);
        }
        
        public System.Data.DataSet Rpt_Get_IPQCCheckData(string PO, string DateFrom, string DateTo, string CheckRS, string DateCode, string Model) {
            return base.Channel.Rpt_Get_IPQCCheckData(PO, DateFrom, DateTo, CheckRS, DateCode, Model);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_IPQCCheckDataAsync(string PO, string DateFrom, string DateTo, string CheckRS, string DateCode, string Model) {
            return base.Channel.Rpt_Get_IPQCCheckDataAsync(PO, DateFrom, DateTo, CheckRS, DateCode, Model);
        }
        
        public System.Data.DataSet Rpt_Get_ProdPlanRpt(string proddate, string model) {
            return base.Channel.Rpt_Get_ProdPlanRpt(proddate, model);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProdPlanRptAsync(string proddate, string model) {
            return base.Channel.Rpt_Get_ProdPlanRptAsync(proddate, model);
        }
        
        public System.Data.DataSet Rpt_Get_PCBARepair(string prodorder, string Model, string DateFrom, string DateTo, string IntSN) {
            return base.Channel.Rpt_Get_PCBARepair(prodorder, Model, DateFrom, DateTo, IntSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PCBARepairAsync(string prodorder, string Model, string DateFrom, string DateTo, string IntSN) {
            return base.Channel.Rpt_Get_PCBARepairAsync(prodorder, Model, DateFrom, DateTo, IntSN);
        }
        
        public System.Data.DataSet Rpt_Get_ComponentVerify(string prodorder, string Model, string Feeder, string DateFrom, string DateTo, string Status) {
            return base.Channel.Rpt_Get_ComponentVerify(prodorder, Model, Feeder, DateFrom, DateTo, Status);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ComponentVerifyAsync(string prodorder, string Model, string Feeder, string DateFrom, string DateTo, string Status) {
            return base.Channel.Rpt_Get_ComponentVerifyAsync(prodorder, Model, Feeder, DateFrom, DateTo, Status);
        }
        
        public System.Data.DataSet Rpt_Get_ConsumerList(string PKGID, string PartNo) {
            return base.Channel.Rpt_Get_ConsumerList(PKGID, PartNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ConsumerListAsync(string PKGID, string PartNo) {
            return base.Channel.Rpt_Get_ConsumerListAsync(PKGID, PartNo);
        }
        
        public System.Data.DataSet Rpt_Get_PCBSTKData(string PO, string SN, string Process) {
            return base.Channel.Rpt_Get_PCBSTKData(PO, SN, Process);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PCBSTKDataAsync(string PO, string SN, string Process) {
            return base.Channel.Rpt_Get_PCBSTKDataAsync(PO, SN, Process);
        }
        
        public System.Data.DataSet Rpt_Get_PVIFAILData(string PO, string SN) {
            return base.Channel.Rpt_Get_PVIFAILData(PO, SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PVIFAILDataAsync(string PO, string SN) {
            return base.Channel.Rpt_Get_PVIFAILDataAsync(PO, SN);
        }
        
        public System.Data.DataSet Rpt_Get_ProcessHisDataByDTime(string Model, string Process, string DTFrom, string DTTo) {
            return base.Channel.Rpt_Get_ProcessHisDataByDTime(Model, Process, DTFrom, DTTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_ProcessHisDataByDTimeAsync(string Model, string Process, string DTFrom, string DTTo) {
            return base.Channel.Rpt_Get_ProcessHisDataByDTimeAsync(Model, Process, DTFrom, DTTo);
        }
        
        public System.Data.DataSet Rpt_Get_GetSingleRowData(string InputType, string InputData) {
            return base.Channel.Rpt_Get_GetSingleRowData(InputType, InputData);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_GetSingleRowDataAsync(string InputType, string InputData) {
            return base.Channel.Rpt_Get_GetSingleRowDataAsync(InputType, InputData);
        }
        
        public string Comm_DonkeyVerify(string PKGID) {
            return base.Channel.Comm_DonkeyVerify(PKGID);
        }
        
        public System.Threading.Tasks.Task<string> Comm_DonkeyVerifyAsync(string PKGID) {
            return base.Channel.Comm_DonkeyVerifyAsync(PKGID);
        }
        
        public string Com_SendEmail(string sTo, string sCC, string sFrom, string sSubject, string sComment, string sUserNo) {
            return base.Channel.Com_SendEmail(sTo, sCC, sFrom, sSubject, sComment, sUserNo);
        }
        
        public System.Threading.Tasks.Task<string> Com_SendEmailAsync(string sTo, string sCC, string sFrom, string sSubject, string sComment, string sUserNo) {
            return base.Channel.Com_SendEmailAsync(sTo, sCC, sFrom, sSubject, sComment, sUserNo);
        }
        
        public System.Data.DataSet Rpt_Get_PackingData(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID) {
            return base.Channel.Rpt_Get_PackingData(Model, DateCode, DateFrom, DateTo, ProdSN, CartonID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Rpt_Get_PackingDataAsync(string Model, string DateCode, string DateFrom, string DateTo, string ProdSN, string CartonID) {
            return base.Channel.Rpt_Get_PackingDataAsync(Model, DateCode, DateFrom, DateTo, ProdSN, CartonID);
        }
        
        public string SFC_WIPWrite3C2(string IntSerialNo, string Process, string Status, string OperatorName) {
            return base.Channel.SFC_WIPWrite3C2(IntSerialNo, Process, Status, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SFC_WIPWrite3C2Async(string IntSerialNo, string Process, string Status, string OperatorName) {
            return base.Channel.SFC_WIPWrite3C2Async(IntSerialNo, Process, Status, OperatorName);
        }
        
        public System.Data.DataSet SFC_RepMaintenance(System.Data.DataSet dsData, string Type, string ModuleName, string OperatorName, string tblName) {
            return base.Channel.SFC_RepMaintenance(dsData, Type, ModuleName, OperatorName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_RepMaintenanceAsync(System.Data.DataSet dsData, string Type, string ModuleName, string OperatorName, string tblName) {
            return base.Channel.SFC_RepMaintenanceAsync(dsData, Type, ModuleName, OperatorName, tblName);
        }
        
        public string SFC_WIPATEOutputEnter(string TestData) {
            return base.Channel.SFC_WIPATEOutputEnter(TestData);
        }
        
        public System.Threading.Tasks.Task<string> SFC_WIPATEOutputEnterAsync(string TestData) {
            return base.Channel.SFC_WIPATEOutputEnterAsync(TestData);
        }
        
        public System.Data.DataSet SFC_GetSNInfo(string IntSerialNo) {
            return base.Channel.SFC_GetSNInfo(IntSerialNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetSNInfoAsync(string IntSerialNo) {
            return base.Channel.SFC_GetSNInfoAsync(IntSerialNo);
        }
        
        public string SFC_RepRetestProcessMaintain(string IntSerialNo, string Process, string Type, string OperatorName) {
            return base.Channel.SFC_RepRetestProcessMaintain(IntSerialNo, Process, Type, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SFC_RepRetestProcessMaintainAsync(string IntSerialNo, string Process, string Type, string OperatorName) {
            return base.Channel.SFC_RepRetestProcessMaintainAsync(IntSerialNo, Process, Type, OperatorName);
        }
        
        public System.Data.DataSet SFC_ProcessUpdateQuery(string IntSerialNo, string ProdOrder, string tblName) {
            return base.Channel.SFC_ProcessUpdateQuery(IntSerialNo, ProdOrder, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ProcessUpdateQueryAsync(string IntSerialNo, string ProdOrder, string tblName) {
            return base.Channel.SFC_ProcessUpdateQueryAsync(IntSerialNo, ProdOrder, tblName);
        }
        
        public System.Data.DataSet SFC_ProcessUpdateQueryVII(string IntSerialNo, string ProdOrder, string Assembly, string tblName) {
            return base.Channel.SFC_ProcessUpdateQueryVII(IntSerialNo, ProdOrder, Assembly, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ProcessUpdateQueryVIIAsync(string IntSerialNo, string ProdOrder, string Assembly, string tblName) {
            return base.Channel.SFC_ProcessUpdateQueryVIIAsync(IntSerialNo, ProdOrder, Assembly, tblName);
        }
        
        public string SFC_ProcessUpdateCommand(string IntSerialNo, string ProdOrder, string Process, string Type, string AssemblyNo, string UserNo) {
            return base.Channel.SFC_ProcessUpdateCommand(IntSerialNo, ProdOrder, Process, Type, AssemblyNo, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ProcessUpdateCommandAsync(string IntSerialNo, string ProdOrder, string Process, string Type, string AssemblyNo, string UserNo) {
            return base.Channel.SFC_ProcessUpdateCommandAsync(IntSerialNo, ProdOrder, Process, Type, AssemblyNo, UserNo);
        }
        
        public string SFC_GetOQALastTestResult(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetOQALastTestResult(IntSerialNo, Process);
        }
        
        public System.Threading.Tasks.Task<string> SFC_GetOQALastTestResultAsync(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetOQALastTestResultAsync(IntSerialNo, Process);
        }
        
        public System.Data.DataSet SFC_GetOutputQueryTestData(string ProdOrder, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName) {
            return base.Channel.SFC_GetOutputQueryTestData(ProdOrder, PalletID, CartonID, ExtSerialNo, DateFrom, DateTo, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetOutputQueryTestDataAsync(string ProdOrder, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName) {
            return base.Channel.SFC_GetOutputQueryTestDataAsync(ProdOrder, PalletID, CartonID, ExtSerialNo, DateFrom, DateTo, tblName);
        }
        
        public System.Data.DataSet SFC_GetOutputATestData(string Model, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName) {
            return base.Channel.SFC_GetOutputATestData(Model, PalletID, CartonID, ExtSerialNo, DateFrom, DateTo, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetOutputATestDataAsync(string Model, string PalletID, string CartonID, string ExtSerialNo, string DateFrom, string DateTo, string tblName) {
            return base.Channel.SFC_GetOutputATestDataAsync(Model, PalletID, CartonID, ExtSerialNo, DateFrom, DateTo, tblName);
        }
        
        public System.Data.DataSet SFC_GetOutputTestData(string ItemID, string tblName) {
            return base.Channel.SFC_GetOutputTestData(ItemID, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetOutputTestDataAsync(string ItemID, string tblName) {
            return base.Channel.SFC_GetOutputTestDataAsync(ItemID, tblName);
        }
        
        public string SFC_OutputTestDataLog(string ItemID, string UserName) {
            return base.Channel.SFC_OutputTestDataLog(ItemID, UserName);
        }
        
        public System.Threading.Tasks.Task<string> SFC_OutputTestDataLogAsync(string ItemID, string UserName) {
            return base.Channel.SFC_OutputTestDataLogAsync(ItemID, UserName);
        }
        
        public string SFC_IPQCATEOutput(string TestData) {
            return base.Channel.SFC_IPQCATEOutput(TestData);
        }
        
        public System.Threading.Tasks.Task<string> SFC_IPQCATEOutputAsync(string TestData) {
            return base.Channel.SFC_IPQCATEOutputAsync(TestData);
        }
        
        public string SFC_GetLastTestResult(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetLastTestResult(IntSerialNo, Process);
        }
        
        public System.Threading.Tasks.Task<string> SFC_GetLastTestResultAsync(string IntSerialNo, string Process) {
            return base.Channel.SFC_GetLastTestResultAsync(IntSerialNo, Process);
        }
        
        public string SFC_GetLastTestResultVII(string IntSerialNo, string Process, string Model) {
            return base.Channel.SFC_GetLastTestResultVII(IntSerialNo, Process, Model);
        }
        
        public System.Threading.Tasks.Task<string> SFC_GetLastTestResultVIIAsync(string IntSerialNo, string Process, string Model) {
            return base.Channel.SFC_GetLastTestResultVIIAsync(IntSerialNo, Process, Model);
        }
        
        public string SFC_GetLastTestResultNewPlatform(string IntSerialNo) {
            return base.Channel.SFC_GetLastTestResultNewPlatform(IntSerialNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_GetLastTestResultNewPlatformAsync(string IntSerialNo) {
            return base.Channel.SFC_GetLastTestResultNewPlatformAsync(IntSerialNo);
        }
        
        public System.Data.DataSet SFC_AssemblyMTrace(int LineID, int StationID, string ProdOrder, string PCBA, string SN, string Process, string Command, string UserName, string tblName) {
            return base.Channel.SFC_AssemblyMTrace(LineID, StationID, ProdOrder, PCBA, SN, Process, Command, UserName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_AssemblyMTraceAsync(int LineID, int StationID, string ProdOrder, string PCBA, string SN, string Process, string Command, string UserName, string tblName) {
            return base.Channel.SFC_AssemblyMTraceAsync(LineID, StationID, ProdOrder, PCBA, SN, Process, Command, UserName, tblName);
        }
        
        public System.Data.DataSet SFC_ReadRepairData(string IntSN) {
            return base.Channel.SFC_ReadRepairData(IntSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadRepairDataAsync(string IntSN) {
            return base.Channel.SFC_ReadRepairDataAsync(IntSN);
        }
        
        public System.Data.DataSet SFC_GetRepairCode(string Type, string tblName) {
            return base.Channel.SFC_GetRepairCode(Type, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetRepairCodeAsync(string Type, string tblName) {
            return base.Channel.SFC_GetRepairCodeAsync(Type, tblName);
        }
        
        public System.Data.DataSet SFC_RepGetFlow(string IntSerialNo) {
            return base.Channel.SFC_RepGetFlow(IntSerialNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_RepGetFlowAsync(string IntSerialNo) {
            return base.Channel.SFC_RepGetFlowAsync(IntSerialNo);
        }
        
        public System.Data.DataSet SFC_GetTestDataByProcess(string IntSerialNo, string Process, string tblName) {
            return base.Channel.SFC_GetTestDataByProcess(IntSerialNo, Process, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetTestDataByProcessAsync(string IntSerialNo, string Process, string tblName) {
            return base.Channel.SFC_GetTestDataByProcessAsync(IntSerialNo, Process, tblName);
        }
        
        public bool SFC_RepSaveRepairData(System.Data.DataSet RepData, string IntSerialNo) {
            return base.Channel.SFC_RepSaveRepairData(RepData, IntSerialNo);
        }
        
        public System.Threading.Tasks.Task<bool> SFC_RepSaveRepairDataAsync(System.Data.DataSet RepData, string IntSerialNo) {
            return base.Channel.SFC_RepSaveRepairDataAsync(RepData, IntSerialNo);
        }
        
        public System.Data.DataSet SFC_ReadNDFData(string IntSN, string OperatorName, string Type) {
            return base.Channel.SFC_ReadNDFData(IntSN, OperatorName, Type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadNDFDataAsync(string IntSN, string OperatorName, string Type) {
            return base.Channel.SFC_ReadNDFDataAsync(IntSN, OperatorName, Type);
        }
        
        public System.Data.DataSet SFC_ReadFailData(string IntSN) {
            return base.Channel.SFC_ReadFailData(IntSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadFailDataAsync(string IntSN) {
            return base.Channel.SFC_ReadFailDataAsync(IntSN);
        }
        
        public System.Data.DataSet SFC_ReadFixData(string IntSN) {
            return base.Channel.SFC_ReadFixData(IntSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ReadFixDataAsync(string IntSN) {
            return base.Channel.SFC_ReadFixDataAsync(IntSN);
        }
        
        public string SFC_RepUpdateRepairData(System.Data.DataSet RepData, string IntSerialNo, string OperatorName) {
            return base.Channel.SFC_RepUpdateRepairData(RepData, IntSerialNo, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SFC_RepUpdateRepairDataAsync(System.Data.DataSet RepData, string IntSerialNo, string OperatorName) {
            return base.Channel.SFC_RepUpdateRepairDataAsync(RepData, IntSerialNo, OperatorName);
        }
        
        public System.Data.DataSet ShipTestData(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName) {
            return base.Channel.ShipTestData(Model, CartonID, ExtSerialNo, Process, DateFrom, DateTo, Type, Status, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ShipTestDataAsync(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName) {
            return base.Channel.ShipTestDataAsync(Model, CartonID, ExtSerialNo, Process, DateFrom, DateTo, Type, Status, tblName);
        }
        
        public string ShipTestDataStatus(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName) {
            return base.Channel.ShipTestDataStatus(SNID, ItemID, Process, SeqNo, Path, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> ShipTestDataStatusAsync(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName) {
            return base.Channel.ShipTestDataStatusAsync(SNID, ItemID, Process, SeqNo, Path, OperatorName);
        }
        
        public System.Data.DataSet SFC_ShipTestData(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName) {
            return base.Channel.SFC_ShipTestData(Model, CartonID, ExtSerialNo, Process, DateFrom, DateTo, Type, Status, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ShipTestDataAsync(string Model, string CartonID, string ExtSerialNo, string Process, string DateFrom, string DateTo, string Type, int Status, string tblName) {
            return base.Channel.SFC_ShipTestDataAsync(Model, CartonID, ExtSerialNo, Process, DateFrom, DateTo, Type, Status, tblName);
        }
        
        public string SFC_ShipTestDataStatus(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName) {
            return base.Channel.SFC_ShipTestDataStatus(SNID, ItemID, Process, SeqNo, Path, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ShipTestDataStatusAsync(string SNID, string ItemID, string Process, string SeqNo, string Path, string OperatorName) {
            return base.Channel.SFC_ShipTestDataStatusAsync(SNID, ItemID, Process, SeqNo, Path, OperatorName);
        }
        
        public System.Data.DataSet SMT_ReadWI(string LoadID, string ItemID, string CellID, string Type, int History, string Status, string StartDate, string EndDate, string tblName) {
            return base.Channel.SMT_ReadWI(LoadID, ItemID, CellID, Type, History, Status, StartDate, EndDate, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_ReadWIAsync(string LoadID, string ItemID, string CellID, string Type, int History, string Status, string StartDate, string EndDate, string tblName) {
            return base.Channel.SMT_ReadWIAsync(LoadID, ItemID, CellID, Type, History, Status, StartDate, EndDate, tblName);
        }
        
        public System.Data.DataSet SMT_WILoad(System.Data.DataSet WIData, string OperatorName, string tblName) {
            return base.Channel.SMT_WILoad(WIData, OperatorName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_WILoadAsync(System.Data.DataSet WIData, string OperatorName, string tblName) {
            return base.Channel.SMT_WILoadAsync(WIData, OperatorName, tblName);
        }
        
        public string SMT_DealWI(string LoadID, string Type, string ProdOrder, string Computer, string Operatorname) {
            return base.Channel.SMT_DealWI(LoadID, Type, ProdOrder, Computer, Operatorname);
        }
        
        public System.Threading.Tasks.Task<string> SMT_DealWIAsync(string LoadID, string Type, string ProdOrder, string Computer, string Operatorname) {
            return base.Channel.SMT_DealWIAsync(LoadID, Type, ProdOrder, Computer, Operatorname);
        }
        
        public System.Data.DataSet SMT_ShowEquipMatching(string LoadID, string EquipmentID, string ComputerName, string Type, string tblName) {
            return base.Channel.SMT_ShowEquipMatching(LoadID, EquipmentID, ComputerName, Type, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_ShowEquipMatchingAsync(string LoadID, string EquipmentID, string ComputerName, string Type, string tblName) {
            return base.Channel.SMT_ShowEquipMatchingAsync(LoadID, EquipmentID, ComputerName, Type, tblName);
        }
        
        public System.Data.DataSet SMT_EquipMatch(string LoadID, string ItemID, string EquipmentID, string PEquipmentID, string Type, string OperatorName) {
            return base.Channel.SMT_EquipMatch(LoadID, ItemID, EquipmentID, PEquipmentID, Type, OperatorName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_EquipMatchAsync(string LoadID, string ItemID, string EquipmentID, string PEquipmentID, string Type, string OperatorName) {
            return base.Channel.SMT_EquipMatchAsync(LoadID, ItemID, EquipmentID, PEquipmentID, Type, OperatorName);
        }
        
        public System.Data.DataSet SMT_WILoadModel(string tblName) {
            return base.Channel.SMT_WILoadModel(tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_WILoadModelAsync(string tblName) {
            return base.Channel.SMT_WILoadModelAsync(tblName);
        }
        
        public System.Data.DataSet SMT_QueryWILoadID(string Model, string tblName) {
            return base.Channel.SMT_QueryWILoadID(Model, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryWILoadIDAsync(string Model, string tblName) {
            return base.Channel.SMT_QueryWILoadIDAsync(Model, tblName);
        }
        
        public bool SMT_QueryAutoDisplay(string ComputerName) {
            return base.Channel.SMT_QueryAutoDisplay(ComputerName);
        }
        
        public System.Threading.Tasks.Task<bool> SMT_QueryAutoDisplayAsync(string ComputerName) {
            return base.Channel.SMT_QueryAutoDisplayAsync(ComputerName);
        }
        
        public System.Data.DataSet SMT_QueryVerificationStatus(string LoadID, string Type, string Status, string StartDate, string EndDate, string tblName) {
            return base.Channel.SMT_QueryVerificationStatus(LoadID, Type, Status, StartDate, EndDate, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryVerificationStatusAsync(string LoadID, string Type, string Status, string StartDate, string EndDate, string tblName) {
            return base.Channel.SMT_QueryVerificationStatusAsync(LoadID, Type, Status, StartDate, EndDate, tblName);
        }
        
        public System.Data.DataSet SMT_LoadSetup(string LoadID, string Type, string OperatorName, string ComputerName, string tblName) {
            return base.Channel.SMT_LoadSetup(LoadID, Type, OperatorName, ComputerName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_LoadSetupAsync(string LoadID, string Type, string OperatorName, string ComputerName, string tblName) {
            return base.Channel.SMT_LoadSetupAsync(LoadID, Type, OperatorName, ComputerName, tblName);
        }
        
        public System.Data.DataSet SMT_QueryEquipInfo(string EquipmentID, string tblName) {
            return base.Channel.SMT_QueryEquipInfo(EquipmentID, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryEquipInfoAsync(string EquipmentID, string tblName) {
            return base.Channel.SMT_QueryEquipInfoAsync(EquipmentID, tblName);
        }
        
        public System.Data.DataSet SMT_QueryCellTransfer(string LoadID, string StartDate, string EndDate, string OriginalEquipID, string DestinationEquipID, string ComputerName, string Type, string tblName) {
            return base.Channel.SMT_QueryCellTransfer(LoadID, StartDate, EndDate, OriginalEquipID, DestinationEquipID, ComputerName, Type, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryCellTransferAsync(string LoadID, string StartDate, string EndDate, string OriginalEquipID, string DestinationEquipID, string ComputerName, string Type, string tblName) {
            return base.Channel.SMT_QueryCellTransferAsync(LoadID, StartDate, EndDate, OriginalEquipID, DestinationEquipID, ComputerName, Type, tblName);
        }
        
        public string SMT_CellTransfer(string LoadID, string OriginalCellID, string DestinationCellID, string OperatorName) {
            return base.Channel.SMT_CellTransfer(LoadID, OriginalCellID, DestinationCellID, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SMT_CellTransferAsync(string LoadID, string OriginalCellID, string DestinationCellID, string OperatorName) {
            return base.Channel.SMT_CellTransferAsync(LoadID, OriginalCellID, DestinationCellID, OperatorName);
        }
        
        public System.Data.DataSet SMT_QueryCellManage(string LoadID, string StartDate, string EndDate, string EquipID, string ComputerName, string Type, string tblName) {
            return base.Channel.SMT_QueryCellManage(LoadID, StartDate, EndDate, EquipID, ComputerName, Type, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryCellManageAsync(string LoadID, string StartDate, string EndDate, string EquipID, string ComputerName, string Type, string tblName) {
            return base.Channel.SMT_QueryCellManageAsync(LoadID, StartDate, EndDate, EquipID, ComputerName, Type, tblName);
        }
        
        public System.Data.DataSet SMT_QueryVerification(string ComputerName, string tblName) {
            return base.Channel.SMT_QueryVerification(ComputerName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryVerificationAsync(string ComputerName, string tblName) {
            return base.Channel.SMT_QueryVerificationAsync(ComputerName, tblName);
        }
        
        public System.Data.DataSet SMT_CompVerify(string Barcode, string PKGID, string Type, string Computer, string OperatorName, int Qty, string tblName) {
            return base.Channel.SMT_CompVerify(Barcode, PKGID, Type, Computer, OperatorName, Qty, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_CompVerifyAsync(string Barcode, string PKGID, string Type, string Computer, string OperatorName, int Qty, string tblName) {
            return base.Channel.SMT_CompVerifyAsync(Barcode, PKGID, Type, Computer, OperatorName, Qty, tblName);
        }
        
        public System.Data.DataSet SMT_CompCheck(string Barcode, string PKGID, string Type, string OperatorName, string tblName) {
            return base.Channel.SMT_CompCheck(Barcode, PKGID, Type, OperatorName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_CompCheckAsync(string Barcode, string PKGID, string Type, string OperatorName, string tblName) {
            return base.Channel.SMT_CompCheckAsync(Barcode, PKGID, Type, OperatorName, tblName);
        }
        
        public System.Data.DataSet SMT_SPControl(string Process, string PKGID, string OperatorName, string tblName) {
            return base.Channel.SMT_SPControl(Process, PKGID, OperatorName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_SPControlAsync(string Process, string PKGID, string OperatorName, string tblName) {
            return base.Channel.SMT_SPControlAsync(Process, PKGID, OperatorName, tblName);
        }
        
        public System.Data.DataSet SMT_QueryPCBAScan(string ComputerName, string tblName) {
            return base.Channel.SMT_QueryPCBAScan(ComputerName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_QueryPCBAScanAsync(string ComputerName, string tblName) {
            return base.Channel.SMT_QueryPCBAScanAsync(ComputerName, tblName);
        }
        
        public System.Data.DataSet SMT_PCBAScan(string PCBAID, string Process, string ComputerName, string OperatorName, string tblName) {
            return base.Channel.SMT_PCBAScan(PCBAID, Process, ComputerName, OperatorName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_PCBAScanAsync(string PCBAID, string Process, string ComputerName, string OperatorName, string tblName) {
            return base.Channel.SMT_PCBAScanAsync(PCBAID, Process, ComputerName, OperatorName, tblName);
        }
        
        public System.Data.DataSet SMT_FullCheck(string Process, string ComputerName, string tblName) {
            return base.Channel.SMT_FullCheck(Process, ComputerName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_FullCheckAsync(string Process, string ComputerName, string tblName) {
            return base.Channel.SMT_FullCheckAsync(Process, ComputerName, tblName);
        }
        
        public System.Data.DataSet SMT_ReadModel(string AssemblyNo, string tblName) {
            return base.Channel.SMT_ReadModel(AssemblyNo, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_ReadModelAsync(string AssemblyNo, string tblName) {
            return base.Channel.SMT_ReadModelAsync(AssemblyNo, tblName);
        }
        
        public System.Data.DataSet SMT_PBoardScan(string PBoardID, string OperatorName, string tblName) {
            return base.Channel.SMT_PBoardScan(PBoardID, OperatorName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_PBoardScanAsync(string PBoardID, string OperatorName, string tblName) {
            return base.Channel.SMT_PBoardScanAsync(PBoardID, OperatorName, tblName);
        }
        
        public string SendEmail(string sTo, string sCC, string sFrom, string sSubject, string sComment) {
            return base.Channel.SendEmail(sTo, sCC, sFrom, sSubject, sComment);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailAsync(string sTo, string sCC, string sFrom, string sSubject, string sComment) {
            return base.Channel.SendEmailAsync(sTo, sCC, sFrom, sSubject, sComment);
        }
        
        public System.Data.DataSet Com_CircuitCompare(string PCBANo, string tblName) {
            return base.Channel.Com_CircuitCompare(PCBANo, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Com_CircuitCompareAsync(string PCBANo, string tblName) {
            return base.Channel.Com_CircuitCompareAsync(PCBANo, tblName);
        }
        
        public System.Data.DataSet SMT_SPQuery(string PKGID, string Process, string StartTime, string EndTime, string tblName) {
            return base.Channel.SMT_SPQuery(PKGID, Process, StartTime, EndTime, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_SPQueryAsync(string PKGID, string Process, string StartTime, string EndTime, string tblName) {
            return base.Channel.SMT_SPQueryAsync(PKGID, Process, StartTime, EndTime, tblName);
        }
        
        public System.Data.DataSet SMT_LoadCompare(string LoadID, string tblName) {
            return base.Channel.SMT_LoadCompare(LoadID, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_LoadCompareAsync(string LoadID, string tblName) {
            return base.Channel.SMT_LoadCompareAsync(LoadID, tblName);
        }
        
        public string SMT_MaterialModify(string LoadID, string ItemID, string CellID, string Barcode, string MaterialNo, string RepMaterialNo, string OperatorName) {
            return base.Channel.SMT_MaterialModify(LoadID, ItemID, CellID, Barcode, MaterialNo, RepMaterialNo, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SMT_MaterialModifyAsync(string LoadID, string ItemID, string CellID, string Barcode, string MaterialNo, string RepMaterialNo, string OperatorName) {
            return base.Channel.SMT_MaterialModifyAsync(LoadID, ItemID, CellID, Barcode, MaterialNo, RepMaterialNo, OperatorName);
        }
        
        public string SMT_CellPartition(string LoadID, string FromCellID, string FromCircuit, string ToCellID, string ToCircuit, string OperatorName) {
            return base.Channel.SMT_CellPartition(LoadID, FromCellID, FromCircuit, ToCellID, ToCircuit, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SMT_CellPartitionAsync(string LoadID, string FromCellID, string FromCircuit, string ToCellID, string ToCircuit, string OperatorName) {
            return base.Channel.SMT_CellPartitionAsync(LoadID, FromCellID, FromCircuit, ToCellID, ToCircuit, OperatorName);
        }
        
        public string SMT_CellUnload(string LoadID, string CellID, string OperatorName) {
            return base.Channel.SMT_CellUnload(LoadID, CellID, OperatorName);
        }
        
        public System.Threading.Tasks.Task<string> SMT_CellUnloadAsync(string LoadID, string CellID, string OperatorName) {
            return base.Channel.SMT_CellUnloadAsync(LoadID, CellID, OperatorName);
        }
        
        public System.Data.DataTable TLA_JobGetOneList(string JobNo) {
            return base.Channel.TLA_JobGetOneList(JobNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> TLA_JobGetOneListAsync(string JobNo) {
            return base.Channel.TLA_JobGetOneListAsync(JobNo);
        }
        
        public System.Data.DataTable TLA_CompWithProcessGetAll(int AssemblyID) {
            return base.Channel.TLA_CompWithProcessGetAll(AssemblyID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> TLA_CompWithProcessGetAllAsync(int AssemblyID) {
            return base.Channel.TLA_CompWithProcessGetAllAsync(AssemblyID);
        }
        
        public System.Data.DataTable TLA_PickingListGetTable(string JobNo) {
            return base.Channel.TLA_PickingListGetTable(JobNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> TLA_PickingListGetTableAsync(string JobNo) {
            return base.Channel.TLA_PickingListGetTableAsync(JobNo);
        }
        
        public bool Com_WriteFunction(System.Data.DataSet FunctionList, string UserNo) {
            return base.Channel.Com_WriteFunction(FunctionList, UserNo);
        }
        
        public System.Threading.Tasks.Task<bool> Com_WriteFunctionAsync(System.Data.DataSet FunctionList, string UserNo) {
            return base.Channel.Com_WriteFunctionAsync(FunctionList, UserNo);
        }
        
        public System.Data.DataSet Com_ReadRight(string FrmName, string UserNo) {
            return base.Channel.Com_ReadRight(FrmName, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Com_ReadRightAsync(string FrmName, string UserNo) {
            return base.Channel.Com_ReadRightAsync(FrmName, UserNo);
        }
        
        public bool Public_WriteLog(string Func, string ErrMessage, string UserNo, string Type, string Remark) {
            return base.Channel.Public_WriteLog(Func, ErrMessage, UserNo, Type, Remark);
        }
        
        public System.Threading.Tasks.Task<bool> Public_WriteLogAsync(string Func, string ErrMessage, string UserNo, string Type, string Remark) {
            return base.Channel.Public_WriteLogAsync(Func, ErrMessage, UserNo, Type, Remark);
        }
        
        public System.Data.DataSet Com_Defination(System.Data.DataSet Data, string FunctionName, string Command, string TableName, string UserNo) {
            return base.Channel.Com_Defination(Data, FunctionName, Command, TableName, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Com_DefinationAsync(System.Data.DataSet Data, string FunctionName, string Command, string TableName, string UserNo) {
            return base.Channel.Com_DefinationAsync(Data, FunctionName, Command, TableName, UserNo);
        }
        
        public string Com_ChangePSW(string UserNo, string OldPSW, string NewPSW) {
            return base.Channel.Com_ChangePSW(UserNo, OldPSW, NewPSW);
        }
        
        public System.Threading.Tasks.Task<string> Com_ChangePSWAsync(string UserNo, string OldPSW, string NewPSW) {
            return base.Channel.Com_ChangePSWAsync(UserNo, OldPSW, NewPSW);
        }
        
        public System.Data.DataSet Com_Login(string UserNo, string Password) {
            return base.Channel.Com_Login(UserNo, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Com_LoginAsync(string UserNo, string Password) {
            return base.Channel.Com_LoginAsync(UserNo, Password);
        }
        
        public System.Data.DataSet Com_ReadFunction(string ModuleName, string FunctionName, string FunctionID, string RoleID) {
            return base.Channel.Com_ReadFunction(ModuleName, FunctionName, FunctionID, RoleID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Com_ReadFunctionAsync(string ModuleName, string FunctionName, string FunctionID, string RoleID) {
            return base.Channel.Com_ReadFunctionAsync(ModuleName, FunctionName, FunctionID, RoleID);
        }
        
        public bool Com_GrantRight(int RoleID, int FunctionID, string Command, string UserNo) {
            return base.Channel.Com_GrantRight(RoleID, FunctionID, Command, UserNo);
        }
        
        public System.Threading.Tasks.Task<bool> Com_GrantRightAsync(int RoleID, int FunctionID, string Command, string UserNo) {
            return base.Channel.Com_GrantRightAsync(RoleID, FunctionID, Command, UserNo);
        }
        
        public System.Data.DataSet COM_PickMatl(string ProdOrder, string PKGID, string LotNo, string DateCode, string Vendor, string tblName) {
            return base.Channel.COM_PickMatl(ProdOrder, PKGID, LotNo, DateCode, Vendor, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> COM_PickMatlAsync(string ProdOrder, string PKGID, string LotNo, string DateCode, string Vendor, string tblName) {
            return base.Channel.COM_PickMatlAsync(ProdOrder, PKGID, LotNo, DateCode, Vendor, tblName);
        }
        
        public System.Data.DataSet COM_GetProdOrder(string ProdOrder, string Model, string Closed, string Released, string tblName) {
            return base.Channel.COM_GetProdOrder(ProdOrder, Model, Closed, Released, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> COM_GetProdOrderAsync(string ProdOrder, string Model, string Closed, string Released, string tblName) {
            return base.Channel.COM_GetProdOrderAsync(ProdOrder, Model, Closed, Released, tblName);
        }
        
        public System.Data.DataSet COM_GetBrotherAssembly(string AssemblyNo, string tblName) {
            return base.Channel.COM_GetBrotherAssembly(AssemblyNo, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> COM_GetBrotherAssemblyAsync(string AssemblyNo, string tblName) {
            return base.Channel.COM_GetBrotherAssemblyAsync(AssemblyNo, tblName);
        }
        
        public string COM_GetConfig(string ConfigID) {
            return base.Channel.COM_GetConfig(ConfigID);
        }
        
        public System.Threading.Tasks.Task<string> COM_GetConfigAsync(string ConfigID) {
            return base.Channel.COM_GetConfigAsync(ConfigID);
        }
        
        public System.Data.DataSet COM_GetSetData(string SetCode) {
            return base.Channel.COM_GetSetData(SetCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> COM_GetSetDataAsync(string SetCode) {
            return base.Channel.COM_GetSetDataAsync(SetCode);
        }
        
        public int Com_VerifySNDuplicate(string SID, string SNType) {
            return base.Channel.Com_VerifySNDuplicate(SID, SNType);
        }
        
        public System.Threading.Tasks.Task<int> Com_VerifySNDuplicateAsync(string SID, string SNType) {
            return base.Channel.Com_VerifySNDuplicateAsync(SID, SNType);
        }
        
        public System.Data.DataSet Com_GetLabelTemplate(string BarName, string tblName) {
            return base.Channel.Com_GetLabelTemplate(BarName, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Com_GetLabelTemplateAsync(string BarName, string tblName) {
            return base.Channel.Com_GetLabelTemplateAsync(BarName, tblName);
        }
        
        public string Com_GetStandardTime() {
            return base.Channel.Com_GetStandardTime();
        }
        
        public System.Threading.Tasks.Task<string> Com_GetStandardTimeAsync() {
            return base.Channel.Com_GetStandardTimeAsync();
        }
        
        public string Com_GetSingleData(string InputData, string DataType) {
            return base.Channel.Com_GetSingleData(InputData, DataType);
        }
        
        public System.Threading.Tasks.Task<string> Com_GetSingleDataAsync(string InputData, string DataType) {
            return base.Channel.Com_GetSingleDataAsync(InputData, DataType);
        }
        
        public System.Data.DataSet COM_GetProcessListWithType(string ProcessType) {
            return base.Channel.COM_GetProcessListWithType(ProcessType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> COM_GetProcessListWithTypeAsync(string ProcessType) {
            return base.Channel.COM_GetProcessListWithTypeAsync(ProcessType);
        }
        
        public System.Data.DataSet SMT_GetSTKProdOrder(string ProdOrder, string UserID) {
            return base.Channel.SMT_GetSTKProdOrder(ProdOrder, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_GetSTKProdOrderAsync(string ProdOrder, string UserID) {
            return base.Channel.SMT_GetSTKProdOrderAsync(ProdOrder, UserID);
        }
        
        public string SMT_GetCountPKGID(string PKGID) {
            return base.Channel.SMT_GetCountPKGID(PKGID);
        }
        
        public System.Threading.Tasks.Task<string> SMT_GetCountPKGIDAsync(string PKGID) {
            return base.Channel.SMT_GetCountPKGIDAsync(PKGID);
        }
        
        public string SMT_StickLabel(string PanelID, System.Data.DataSet DSPCB, string UserID, string AssembyNo) {
            return base.Channel.SMT_StickLabel(PanelID, DSPCB, UserID, AssembyNo);
        }
        
        public System.Threading.Tasks.Task<string> SMT_StickLabelAsync(string PanelID, System.Data.DataSet DSPCB, string UserID, string AssembyNo) {
            return base.Channel.SMT_StickLabelAsync(PanelID, DSPCB, UserID, AssembyNo);
        }
        
        public string SMT_PCBAPVI(string SID, string ProdLine, string Process, string PVIResult, string UserID, System.Data.DataSet RepDetail) {
            return base.Channel.SMT_PCBAPVI(SID, ProdLine, Process, PVIResult, UserID, RepDetail);
        }
        
        public System.Threading.Tasks.Task<string> SMT_PCBAPVIAsync(string SID, string ProdLine, string Process, string PVIResult, string UserID, System.Data.DataSet RepDetail) {
            return base.Channel.SMT_PCBAPVIAsync(SID, ProdLine, Process, PVIResult, UserID, RepDetail);
        }
        
        public string SMT_PCBARepair(string SID, string RepCode, string ProdLine, string UserID, System.Data.DataSet RepDetail) {
            return base.Channel.SMT_PCBARepair(SID, RepCode, ProdLine, UserID, RepDetail);
        }
        
        public System.Threading.Tasks.Task<string> SMT_PCBARepairAsync(string SID, string RepCode, string ProdLine, string UserID, System.Data.DataSet RepDetail) {
            return base.Channel.SMT_PCBARepairAsync(SID, RepCode, ProdLine, UserID, RepDetail);
        }
        
        public System.Data.DataSet SMT_GetPCBARepairDetail(string PCBID, string UserID) {
            return base.Channel.SMT_GetPCBARepairDetail(PCBID, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SMT_GetPCBARepairDetailAsync(string PCBID, string UserID) {
            return base.Channel.SMT_GetPCBARepairDetailAsync(PCBID, UserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ManualAssembly.ServiceReference1.TLA_ExecuteSQLResponse ManualAssembly.ServiceReference1.TraceabilitySoap.TLA_ExecuteSQL(ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest request) {
            return base.Channel.TLA_ExecuteSQL(request);
        }
        
        public bool TLA_ExecuteSQL(string SQLstring, ManualAssembly.ServiceReference1.DictionaryEntry[] sqlParam) {
            ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest inValue = new ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest();
            inValue.SQLstring = SQLstring;
            inValue.sqlParam = sqlParam;
            ManualAssembly.ServiceReference1.TLA_ExecuteSQLResponse retVal = ((ManualAssembly.ServiceReference1.TraceabilitySoap)(this)).TLA_ExecuteSQL(inValue);
            return retVal.TLA_ExecuteSQLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ManualAssembly.ServiceReference1.TLA_ExecuteSQLResponse> ManualAssembly.ServiceReference1.TraceabilitySoap.TLA_ExecuteSQLAsync(ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest request) {
            return base.Channel.TLA_ExecuteSQLAsync(request);
        }
        
        public System.Threading.Tasks.Task<ManualAssembly.ServiceReference1.TLA_ExecuteSQLResponse> TLA_ExecuteSQLAsync(string SQLstring, ManualAssembly.ServiceReference1.DictionaryEntry[] sqlParam) {
            ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest inValue = new ManualAssembly.ServiceReference1.TLA_ExecuteSQLRequest();
            inValue.SQLstring = SQLstring;
            inValue.sqlParam = sqlParam;
            return ((ManualAssembly.ServiceReference1.TraceabilitySoap)(this)).TLA_ExecuteSQLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryResponse ManualAssembly.ServiceReference1.TraceabilitySoap.TLA_ExecuteSqlQuery(ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest request) {
            return base.Channel.TLA_ExecuteSqlQuery(request);
        }
        
        public System.Data.DataTable TLA_ExecuteSqlQuery(string SQLstring, ManualAssembly.ServiceReference1.DictionaryEntry[] SQLParam) {
            ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest inValue = new ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest();
            inValue.SQLstring = SQLstring;
            inValue.SQLParam = SQLParam;
            ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryResponse retVal = ((ManualAssembly.ServiceReference1.TraceabilitySoap)(this)).TLA_ExecuteSqlQuery(inValue);
            return retVal.TLA_ExecuteSqlQueryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryResponse> ManualAssembly.ServiceReference1.TraceabilitySoap.TLA_ExecuteSqlQueryAsync(ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest request) {
            return base.Channel.TLA_ExecuteSqlQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryResponse> TLA_ExecuteSqlQueryAsync(string SQLstring, ManualAssembly.ServiceReference1.DictionaryEntry[] SQLParam) {
            ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest inValue = new ManualAssembly.ServiceReference1.TLA_ExecuteSqlQueryRequest();
            inValue.SQLstring = SQLstring;
            inValue.SQLParam = SQLParam;
            return ((ManualAssembly.ServiceReference1.TraceabilitySoap)(this)).TLA_ExecuteSqlQueryAsync(inValue);
        }
        
        public System.Data.DataTable TLA_Assembling(string PCBID, string JobNo, string ProcessIDList, int stnID, string User) {
            return base.Channel.TLA_Assembling(PCBID, JobNo, ProcessIDList, stnID, User);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> TLA_AssemblingAsync(string PCBID, string JobNo, string ProcessIDList, int stnID, string User) {
            return base.Channel.TLA_AssemblingAsync(PCBID, JobNo, ProcessIDList, stnID, User);
        }
        
        public System.Data.DataTable TLA_boxingSuba(string boxBarcode, string JobNo, int ProcessID, int StationID, string SubaName, int toBoxQty, string User) {
            return base.Channel.TLA_boxingSuba(boxBarcode, JobNo, ProcessID, StationID, SubaName, toBoxQty, User);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> TLA_boxingSubaAsync(string boxBarcode, string JobNo, int ProcessID, int StationID, string SubaName, int toBoxQty, string User) {
            return base.Channel.TLA_boxingSubaAsync(boxBarcode, JobNo, ProcessID, StationID, SubaName, toBoxQty, User);
        }
        
        public string SFC_ChangeBOX(string strSID, string stroldBOXID, string strNewBOXID, string strUserID, string strTYN) {
            return base.Channel.SFC_ChangeBOX(strSID, stroldBOXID, strNewBOXID, strUserID, strTYN);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ChangeBOXAsync(string strSID, string stroldBOXID, string strNewBOXID, string strUserID, string strTYN) {
            return base.Channel.SFC_ChangeBOXAsync(strSID, stroldBOXID, strNewBOXID, strUserID, strTYN);
        }
        
        public string SFC_ChangePallet(string strSID, string stroldBOXID, string strNewPalletID, string strUserID, string TYN) {
            return base.Channel.SFC_ChangePallet(strSID, stroldBOXID, strNewPalletID, strUserID, TYN);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ChangePalletAsync(string strSID, string stroldBOXID, string strNewPalletID, string strUserID, string TYN) {
            return base.Channel.SFC_ChangePalletAsync(strSID, stroldBOXID, strNewPalletID, strUserID, TYN);
        }
        
        public string SFC_Matching1(System.Data.DataSet ds, string strUserID) {
            return base.Channel.SFC_Matching1(ds, strUserID);
        }
        
        public System.Threading.Tasks.Task<string> SFC_Matching1Async(System.Data.DataSet ds, string strUserID) {
            return base.Channel.SFC_Matching1Async(ds, strUserID);
        }
        
        public System.Data.DataSet SFC_GetMATCHING1Status(string IntSN) {
            return base.Channel.SFC_GetMATCHING1Status(IntSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetMATCHING1StatusAsync(string IntSN) {
            return base.Channel.SFC_GetMATCHING1StatusAsync(IntSN);
        }
        
        public System.Data.DataSet SFC_GetModelInfoPacking(string ProdOrder, string InputType, string UserNo) {
            return base.Channel.SFC_GetModelInfoPacking(ProdOrder, InputType, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelInfoPackingAsync(string ProdOrder, string InputType, string UserNo) {
            return base.Channel.SFC_GetModelInfoPackingAsync(ProdOrder, InputType, UserNo);
        }
        
        public System.Data.DataSet SFC_GetCartonInfo(string CartonID, string UserNo) {
            return base.Channel.SFC_GetCartonInfo(CartonID, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetCartonInfoAsync(string CartonID, string UserNo) {
            return base.Channel.SFC_GetCartonInfoAsync(CartonID, UserNo);
        }
        
        public System.Data.DataSet SFC_GetPackingData(string InputData, string InputType, string UserNo) {
            return base.Channel.SFC_GetPackingData(InputData, InputType, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetPackingDataAsync(string InputData, string InputType, string UserNo) {
            return base.Channel.SFC_GetPackingDataAsync(InputData, InputType, UserNo);
        }
        
        public string SFC_CommProcess(string SID, string Process, string ProdLine, string UserNo, string testResult) {
            return base.Channel.SFC_CommProcess(SID, Process, ProdLine, UserNo, testResult);
        }
        
        public System.Threading.Tasks.Task<string> SFC_CommProcessAsync(string SID, string Process, string ProdLine, string UserNo, string testResult) {
            return base.Channel.SFC_CommProcessAsync(SID, Process, ProdLine, UserNo, testResult);
        }
        
        public string SFC_IDSWOP(string OLDSN, string NewSN, string Process, string UserNo) {
            return base.Channel.SFC_IDSWOP(OLDSN, NewSN, Process, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_IDSWOPAsync(string OLDSN, string NewSN, string Process, string UserNo) {
            return base.Channel.SFC_IDSWOPAsync(OLDSN, NewSN, Process, UserNo);
        }
        
        public System.Data.DataSet SFC_GetProcessDetail(string Model, string UserNo) {
            return base.Channel.SFC_GetProcessDetail(Model, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetProcessDetailAsync(string Model, string UserNo) {
            return base.Channel.SFC_GetProcessDetailAsync(Model, UserNo);
        }
        
        public string SFC_SNRework(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, string cssn, System.Data.DataSet ds) {
            return base.Channel.SFC_SNRework(ProdOrder, Model, IntSN, ProdLine, UserNo, cssn, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_SNReworkAsync(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, string cssn, System.Data.DataSet ds) {
            return base.Channel.SFC_SNReworkAsync(ProdOrder, Model, IntSN, ProdLine, UserNo, cssn, ds);
        }
        
        public string SFC_WIPRework(string IntSN, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_WIPRework(IntSN, UserNo, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_WIPReworkAsync(string IntSN, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_WIPReworkAsync(IntSN, UserNo, ds);
        }
        
        public string SFC_Packing(string ProdOrder, string IntSN, System.Data.DataSet ds, string UserNo) {
            return base.Channel.SFC_Packing(ProdOrder, IntSN, ds, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_PackingAsync(string ProdOrder, string IntSN, System.Data.DataSet ds, string UserNo) {
            return base.Channel.SFC_PackingAsync(ProdOrder, IntSN, ds, UserNo);
        }
        
        public System.Data.DataSet SFC_GetModelInfo(string Model, string UserNo) {
            return base.Channel.SFC_GetModelInfo(Model, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelInfoAsync(string Model, string UserNo) {
            return base.Channel.SFC_GetModelInfoAsync(Model, UserNo);
        }
        
        public System.Data.DataSet SFC_GetWIPDataWithIntSN(string IntSN, string UserNo) {
            return base.Channel.SFC_GetWIPDataWithIntSN(IntSN, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetWIPDataWithIntSNAsync(string IntSN, string UserNo) {
            return base.Channel.SFC_GetWIPDataWithIntSNAsync(IntSN, UserNo);
        }
        
        public System.Data.DataSet SFC_GetCMBStructure(string Model, string CMBProcess, string UserNo) {
            return base.Channel.SFC_GetCMBStructure(Model, CMBProcess, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetCMBStructureAsync(string Model, string CMBProcess, string UserNo) {
            return base.Channel.SFC_GetCMBStructureAsync(Model, CMBProcess, UserNo);
        }
        
        public string SFC_Combine(string SID, string Process, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_Combine(SID, Process, ProdLine, UserNo, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_CombineAsync(string SID, string Process, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_CombineAsync(SID, Process, ProdLine, UserNo, ds);
        }
        
        public System.Data.DataSet SFC_GetModelStructure(string Model, string tblName) {
            return base.Channel.SFC_GetModelStructure(Model, tblName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelStructureAsync(string Model, string tblName) {
            return base.Channel.SFC_GetModelStructureAsync(Model, tblName);
        }
        
        public string SFC_CheckALLPassed(string SN, string UserNo) {
            return base.Channel.SFC_CheckALLPassed(SN, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_CheckALLPassedAsync(string SN, string UserNo) {
            return base.Channel.SFC_CheckALLPassedAsync(SN, UserNo);
        }
        
        public System.Data.DataSet SFC_GetHangCarton() {
            return base.Channel.SFC_GetHangCarton();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetHangCartonAsync() {
            return base.Channel.SFC_GetHangCartonAsync();
        }
        
        public string SFC_Shipment(string CartonID, string SalesOrder, string Model, string UserNo, int CurCartonShipQTY, string ShipType) {
            return base.Channel.SFC_Shipment(CartonID, SalesOrder, Model, UserNo, CurCartonShipQTY, ShipType);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ShipmentAsync(string CartonID, string SalesOrder, string Model, string UserNo, int CurCartonShipQTY, string ShipType) {
            return base.Channel.SFC_ShipmentAsync(CartonID, SalesOrder, Model, UserNo, CurCartonShipQTY, ShipType);
        }
        
        public System.Data.DataSet SFC_GetSOInfo(string SalesOrder, string Model, string UserNo) {
            return base.Channel.SFC_GetSOInfo(SalesOrder, Model, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetSOInfoAsync(string SalesOrder, string Model, string UserNo) {
            return base.Channel.SFC_GetSOInfoAsync(SalesOrder, Model, UserNo);
        }
        
        public System.Data.DataSet SFC_ShipDataInfo(string SalesOrder, string Model, string HOD, string UserNo) {
            return base.Channel.SFC_ShipDataInfo(SalesOrder, Model, HOD, UserNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_ShipDataInfoAsync(string SalesOrder, string Model, string HOD, string UserNo) {
            return base.Channel.SFC_ShipDataInfoAsync(SalesOrder, Model, HOD, UserNo);
        }
        
        public string SFC_CheckShipFIFO(string CartonID, string DateCode, string UserNo) {
            return base.Channel.SFC_CheckShipFIFO(CartonID, DateCode, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_CheckShipFIFOAsync(string CartonID, string DateCode, string UserNo) {
            return base.Channel.SFC_CheckShipFIFOAsync(CartonID, DateCode, UserNo);
        }
        
        public string SFC_ProductEnter(System.Data.DataSet DS, int ChildCount, string UserNo) {
            return base.Channel.SFC_ProductEnter(DS, ChildCount, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ProductEnterAsync(System.Data.DataSet DS, int ChildCount, string UserNo) {
            return base.Channel.SFC_ProductEnterAsync(DS, ChildCount, UserNo);
        }
        
        public System.Data.DataSet SFC_GetModelLabelTemplate(string Model) {
            return base.Channel.SFC_GetModelLabelTemplate(Model);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SFC_GetModelLabelTemplateAsync(string Model) {
            return base.Channel.SFC_GetModelLabelTemplateAsync(Model);
        }
        
        public string SFC_OQAProcess(string Model, string ProdLine, string UserNo, string CSSN, string IntSN, System.Data.DataSet ds) {
            return base.Channel.SFC_OQAProcess(Model, ProdLine, UserNo, CSSN, IntSN, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_OQAProcessAsync(string Model, string ProdLine, string UserNo, string CSSN, string IntSN, System.Data.DataSet ds) {
            return base.Channel.SFC_OQAProcessAsync(Model, ProdLine, UserNo, CSSN, IntSN, ds);
        }
        
        public string SFC_WIPPVICheck(string SID, string ProdLine, string Process, string CheckRS, string UserNo) {
            return base.Channel.SFC_WIPPVICheck(SID, ProdLine, Process, CheckRS, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_WIPPVICheckAsync(string SID, string ProdLine, string Process, string CheckRS, string UserNo) {
            return base.Channel.SFC_WIPPVICheckAsync(SID, ProdLine, Process, CheckRS, UserNo);
        }
        
        public string SFC_WIPPVIRepair(string SID, string RepCode, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_WIPPVIRepair(SID, RepCode, ProdLine, UserNo, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_WIPPVIRepairAsync(string SID, string RepCode, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_WIPPVIRepairAsync(SID, RepCode, ProdLine, UserNo, ds);
        }
        
        public string SFC_CSReturn(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_CSReturn(ProdOrder, Model, IntSN, ProdLine, UserNo, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_CSReturnAsync(string ProdOrder, string Model, string IntSN, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_CSReturnAsync(ProdOrder, Model, IntSN, ProdLine, UserNo, ds);
        }
        
        public string SFC_ChangeModel(string ProdOrder, string Model, string OLDIntSN, string NEWIntSN, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_ChangeModel(ProdOrder, Model, OLDIntSN, NEWIntSN, ProdLine, UserNo, ds);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ChangeModelAsync(string ProdOrder, string Model, string OLDIntSN, string NEWIntSN, string ProdLine, string UserNo, System.Data.DataSet ds) {
            return base.Channel.SFC_ChangeModelAsync(ProdOrder, Model, OLDIntSN, NEWIntSN, ProdLine, UserNo, ds);
        }
        
        public string SFC_ForceCloseCarton(string CartonID, string UserNo) {
            return base.Channel.SFC_ForceCloseCarton(CartonID, UserNo);
        }
        
        public System.Threading.Tasks.Task<string> SFC_ForceCloseCartonAsync(string CartonID, string UserNo) {
            return base.Channel.SFC_ForceCloseCartonAsync(CartonID, UserNo);
        }
    }
}
